x=c(9.91,13.60,8.05,9.00,7.08,11.50)
y=c(6.16,21.10,20.10,16.50,17.30)

shapiro.test(x) # p-value = 0.8671 : le jeu de données "x" semble échantillonné d'une distribution normale
shapiro.test(y) # p-value = 0.1279 : le jeu de données "y" semble échantillonné d'une distribution normale
concatenated=c(x,y) # concaténation des jeux de données "x" et "y"
description=as.factor(c(rep('X',length(x)),rep('Y',length(y)))) # annotation de chaque point dans la concaténation, avec le nom de son échantillon ("X" ou "Y")
library(car)
leveneTest(concatenated,description) # p-value = 0.343 : les variances sont homogènes

t.test(x,y,var.equal=TRUE,alternative="two.sided") # t-test "two-tailed" (p-value = 0.03834)
t.test(x,y,var.equal=TRUE) # Également t-test "two-tailed" (p-value = 0.03834) : "alternative" est réglé sur "two.sided" par défaut)
t.test(x,y,var.equal=TRUE,alternative="less") # t-test "one-tailed" pour interroger l'hypothèse que la moyenne de la population échantillonnée en "x" est inférieure à la moyenne échantillonnée en "y" (p-value = 0.01917 : la moitié de la p-value de la version "two-tailed")
t.test(x,y,var.equal=TRUE,alternative="greater") # t-test "one-tailed" pour interroger l'hypothèse que la moyenne de la population échantillonnée en "x" est supérieure à la moyenne échantillonnée en "y" (p-value = 0.9808)
